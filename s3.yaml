---
- hosts: localhost
  vars_files:
    - vars.yaml
  tasks:
    - name: command
      shell: echo "{{ bucket }}" | cut -d '/' -f1
      register: BUCKET_NAME
    - name: get accesspoint list
      command: aws s3control list-access-points --account-id {{ account_id }} --bucket {{ bucket }}
      register: AP_LIST
    - name: Set ap list vals
      set_fact: aplist="{{ AP_LIST.stdout }}"
    - name: show ap list
      debug:
        msg: "{{ aplist }}"

    - name: get our accesspoint
      debug:
        msg: "{{ item }}"
      loop: "{{ aplist | community.general.json_query('AccessPointList[*].Name') }}"
      when: item  == ap_name
      register: ap_exists

    - name: print to see value of ap_exists
      debug:
        var: ap_exists

    - name: create accesspoint and put default policy
      include_role:
        name: create-ap-and-add-policy
      when: (aplist.AccessPointList | length == 0) or (ap_exists.skipped == true)

    - name: get our accesspoint
      debug:
        msg: "{{ item }}"
      loop: "{{ aplist | community.general.json_query('AccessPointList[*].Name') }}"
      when: item  == ap_name

    - name: get accesspoint policy
      command: aws s3control get-access-point-policy --account-id {{ account_id }} --name {{ ap_name }}
      register: AP_POLICY
    - name: Set ap policy vals
      set_fact: ap_policy="{{ AP_POLICY.stdout }}"
    - name: Set ap policy only
      set_fact: ap_policy_only="{{ ap_policy.Policy }}"
    - name: show ap policy only
      debug:
        msg: "{{ ap_policy_only }}"
    - name: Create temp-ap-policy.json file
      copy:
        content: "{{ ap_policy_only }}"
        dest: temp-ap-policy.json

    - name: show ap policy principle type
      debug:
        msg: "{{ ap_policy_only.Statement[0].Principal.AWS | type_debug }}"

    - name: update non-list accesspoint policy file with multiple ARN
      include_role:
        name: update-non-list-policies
      when: ap_policy_only.Statement[0].Principal.AWS | type_debug != "list"

    - name: update list accesspoint policy file with multiple ARN
      include_role:
        name: update-list-policies
      with_items: "{{ role_arn | split(',') | flatten }}"
      when: ap_policy_only.Statement[0].Principal.AWS | type_debug == "list"

    - name: cleaning up temp files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - ap-policy.json
        - temp-ap-policy.json
